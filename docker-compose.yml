version: '3.8' # Updated to a more recent compose version
services:
  mongodb:
    image: mongodb/mongodb-community-server:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "kafka_topic_orders"
      KAFKA_DEFAULT_REPLICATION_FACTOR: 3
    depends_on:
      - zookeeper

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:29092"
    depends_on:
      - kafka
  spring-boot-app:
    build:
      dockerfile: Dockerfile # Your Spring Boot Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      mongodb:
        condition: service_healthy
      kafka:
        condition: service_started
      zookeeper:
        condition: service_started

volumes:
  mongodb_data: